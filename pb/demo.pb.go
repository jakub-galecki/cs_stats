// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pb/demo.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessDemoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Player        string                 `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDemoReq) Reset() {
	*x = ProcessDemoReq{}
	mi := &file_pb_demo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDemoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDemoReq) ProtoMessage() {}

func (x *ProcessDemoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDemoReq.ProtoReflect.Descriptor instead.
func (*ProcessDemoReq) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessDemoReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProcessDemoReq) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

type KillCounter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	HeadshotCount int32                  `protobuf:"varint,2,opt,name=headshotCount,proto3" json:"headshotCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillCounter) Reset() {
	*x = KillCounter{}
	mi := &file_pb_demo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillCounter) ProtoMessage() {}

func (x *KillCounter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillCounter.ProtoReflect.Descriptor instead.
func (*KillCounter) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{1}
}

func (x *KillCounter) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *KillCounter) GetHeadshotCount() int32 {
	if x != nil {
		return x.HeadshotCount
	}
	return 0
}

type Flash struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EnemiesFlashed int32                  `protobuf:"varint,1,opt,name=enemiesFlashed,proto3" json:"enemiesFlashed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Flash) Reset() {
	*x = Flash{}
	mi := &file_pb_demo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flash) ProtoMessage() {}

func (x *Flash) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flash.ProtoReflect.Descriptor instead.
func (*Flash) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{2}
}

func (x *Flash) GetEnemiesFlashed() int32 {
	if x != nil {
		return x.EnemiesFlashed
	}
	return 0
}

type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float64                `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_pb_demo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{3}
}

func (x *Position) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Kill struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Overall           *KillCounter            `protobuf:"bytes,1,opt,name=overall,proto3" json:"overall,omitempty"`
	Terrorists        *KillCounter            `protobuf:"bytes,2,opt,name=terrorists,proto3" json:"terrorists,omitempty"`
	CounterTerrorists *KillCounter            `protobuf:"bytes,3,opt,name=counterTerrorists,proto3" json:"counterTerrorists,omitempty"`
	Weapons           map[string]*KillCounter `protobuf:"bytes,4,rep,name=weapons,proto3" json:"weapons,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	KillPositions     []*Position             `protobuf:"bytes,5,rep,name=killPositions,proto3" json:"killPositions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Kill) Reset() {
	*x = Kill{}
	mi := &file_pb_demo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kill) ProtoMessage() {}

func (x *Kill) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kill.ProtoReflect.Descriptor instead.
func (*Kill) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{4}
}

func (x *Kill) GetOverall() *KillCounter {
	if x != nil {
		return x.Overall
	}
	return nil
}

func (x *Kill) GetTerrorists() *KillCounter {
	if x != nil {
		return x.Terrorists
	}
	return nil
}

func (x *Kill) GetCounterTerrorists() *KillCounter {
	if x != nil {
		return x.CounterTerrorists
	}
	return nil
}

func (x *Kill) GetWeapons() map[string]*KillCounter {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *Kill) GetKillPositions() []*Position {
	if x != nil {
		return x.KillPositions
	}
	return nil
}

type GameStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kills         map[string]*Kill       `protobuf:"bytes,1,rep,name=kills,proto3" json:"kills,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Flashes       map[string]*Flash      `protobuf:"bytes,2,rep,name=flashes,proto3" json:"flashes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStats) Reset() {
	*x = GameStats{}
	mi := &file_pb_demo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStats) ProtoMessage() {}

func (x *GameStats) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStats.ProtoReflect.Descriptor instead.
func (*GameStats) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{5}
}

func (x *GameStats) GetKills() map[string]*Kill {
	if x != nil {
		return x.Kills
	}
	return nil
}

func (x *GameStats) GetFlashes() map[string]*Flash {
	if x != nil {
		return x.Flashes
	}
	return nil
}

type ProcessDemoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        string                 `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Players       []string               `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Stats         *GameStats             `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDemoResponse) Reset() {
	*x = ProcessDemoResponse{}
	mi := &file_pb_demo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDemoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDemoResponse) ProtoMessage() {}

func (x *ProcessDemoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_demo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDemoResponse.ProtoReflect.Descriptor instead.
func (*ProcessDemoResponse) Descriptor() ([]byte, []int) {
	return file_pb_demo_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessDemoResponse) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *ProcessDemoResponse) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ProcessDemoResponse) GetStats() *GameStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_pb_demo_proto protoreflect.FileDescriptor

var file_pb_demo_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x3c, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65,
	0x6d, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x22, 0x49, 0x0a, 0x0b, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x73, 0x68,
	0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x68,
	0x65, 0x61, 0x64, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x05,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65,
	0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x22, 0x26, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0xd3, 0x02, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x29,
	0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a,
	0x74, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x4b, 0x69, 0x6c, 0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x6b, 0x69,
	0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b,
	0x0a, 0x0c, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x01, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x1a,
	0x42, 0x0a, 0x0a, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x0c, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6c, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0x45, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6d, 0x6f,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6d,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61,
	0x6b, 0x75, 0x62, 0x2d, 0x67, 0x61, 0x6c, 0x65, 0x63, 0x6b, 0x69, 0x2f, 0x63, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pb_demo_proto_rawDescOnce sync.Once
	file_pb_demo_proto_rawDescData []byte
)

func file_pb_demo_proto_rawDescGZIP() []byte {
	file_pb_demo_proto_rawDescOnce.Do(func() {
		file_pb_demo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_demo_proto_rawDesc), len(file_pb_demo_proto_rawDesc)))
	})
	return file_pb_demo_proto_rawDescData
}

var file_pb_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pb_demo_proto_goTypes = []any{
	(*ProcessDemoReq)(nil),      // 0: pb.ProcessDemoReq
	(*KillCounter)(nil),         // 1: pb.KillCounter
	(*Flash)(nil),               // 2: pb.Flash
	(*Position)(nil),            // 3: pb.Position
	(*Kill)(nil),                // 4: pb.Kill
	(*GameStats)(nil),           // 5: pb.GameStats
	(*ProcessDemoResponse)(nil), // 6: pb.ProcessDemoResponse
	nil,                         // 7: pb.Kill.WeaponsEntry
	nil,                         // 8: pb.GameStats.KillsEntry
	nil,                         // 9: pb.GameStats.FlashesEntry
}
var file_pb_demo_proto_depIdxs = []int32{
	1,  // 0: pb.Kill.overall:type_name -> pb.KillCounter
	1,  // 1: pb.Kill.terrorists:type_name -> pb.KillCounter
	1,  // 2: pb.Kill.counterTerrorists:type_name -> pb.KillCounter
	7,  // 3: pb.Kill.weapons:type_name -> pb.Kill.WeaponsEntry
	3,  // 4: pb.Kill.killPositions:type_name -> pb.Position
	8,  // 5: pb.GameStats.kills:type_name -> pb.GameStats.KillsEntry
	9,  // 6: pb.GameStats.flashes:type_name -> pb.GameStats.FlashesEntry
	5,  // 7: pb.ProcessDemoResponse.stats:type_name -> pb.GameStats
	1,  // 8: pb.Kill.WeaponsEntry.value:type_name -> pb.KillCounter
	4,  // 9: pb.GameStats.KillsEntry.value:type_name -> pb.Kill
	2,  // 10: pb.GameStats.FlashesEntry.value:type_name -> pb.Flash
	0,  // 11: pb.Stats.ProcessDemo:input_type -> pb.ProcessDemoReq
	6,  // 12: pb.Stats.ProcessDemo:output_type -> pb.ProcessDemoResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pb_demo_proto_init() }
func file_pb_demo_proto_init() {
	if File_pb_demo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_demo_proto_rawDesc), len(file_pb_demo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_demo_proto_goTypes,
		DependencyIndexes: file_pb_demo_proto_depIdxs,
		MessageInfos:      file_pb_demo_proto_msgTypes,
	}.Build()
	File_pb_demo_proto = out.File
	file_pb_demo_proto_goTypes = nil
	file_pb_demo_proto_depIdxs = nil
}
